{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/recursos';\n\n//Esta de aqui es una función que realiza la solicitud POST al servidor para crear un recurso\nconst createRecurso = (data, token) => {\n  return axios.post(`${API_URL}/crear`, data, {\n    //En el header se envía el token almacenado en el localStorage para poder realizar la autenticación\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n\n// funcion que realiza una solicitud GET al servidor para obtener todos los recursos\nconst getRecursos = token => {\n  return axios.get(`${API_URL}/listar`, {\n    //Se usa el token para la autenticación\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n\n// funsion que realiza una solicitud PUT al servidor para modificar el recurso\nconst updateRecurso = (id, data, token) => {\n  //Se usa el token para la autenticación\n  return axios.put(`${API_URL}/actualizar/${id}`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n\n// funcion que realiza una solicitud DELETE al servidor para eliminar el recurso de la BD\nconst deleteRecurso = (id, token) => {\n  console.log(\"id del recurso a eliminar AXIOS DELETE:\", id);\n  return axios.delete(`${API_URL}/eliminar/${id}`, {\n    //Se usa el token para la autenticación\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n\n// Obteneemos un recurso específico por su ID\nconst getRecursoById = (id, token) => {\n  return axios.get(`${API_URL}/listar/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport default {\n  createRecurso,\n  getRecursos,\n  getRecursoById,\n  updateRecurso,\n  deleteRecurso\n};","map":{"version":3,"names":["axios","API_URL","createRecurso","data","token","post","headers","Authorization","getRecursos","get","updateRecurso","id","put","deleteRecurso","console","log","delete","getRecursoById"],"sources":["C:/Users/diana/Desktop/C8288-PROYECTO/C8288_ProyectFinal/frontend/src/services/recursoService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/recursos';\r\n\r\n//Esta de aqui es una función que realiza la solicitud POST al servidor para crear un recurso\r\nconst createRecurso = (data, token) => {\r\n  return axios.post(`${API_URL}/crear`, data, {\r\n    //En el header se envía el token almacenado en el localStorage para poder realizar la autenticación\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\n// funcion que realiza una solicitud GET al servidor para obtener todos los recursos\r\nconst getRecursos = (token) => {\r\n  return axios.get(`${API_URL}/listar`, {\r\n    //Se usa el token para la autenticación\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\n// funsion que realiza una solicitud PUT al servidor para modificar el recurso\r\nconst updateRecurso = (id, data, token) => {\r\n  //Se usa el token para la autenticación\r\n  return axios.put(`${API_URL}/actualizar/${id}`, data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\n// funcion que realiza una solicitud DELETE al servidor para eliminar el recurso de la BD\r\nconst deleteRecurso = (id, token) => {\r\n  console.log(\"id del recurso a eliminar AXIOS DELETE:\",id);\r\n  return axios.delete(`${API_URL}/eliminar/${id}`, {\r\n    //Se usa el token para la autenticación\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\n// Obteneemos un recurso específico por su ID\r\nconst getRecursoById = (id, token) => {\r\n  return axios.get(`${API_URL}/listar/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport default { createRecurso, getRecursos, getRecursoById, updateRecurso, deleteRecurso };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;;AAEhD;AACA,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EACrC,OAAOJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAEE,IAAI,EAAE;IAC1C;IACAG,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMI,WAAW,GAAIJ,KAAK,IAAK;EAC7B,OAAOJ,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,SAAS,EAAE;IACpC;IACAK,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMM,aAAa,GAAGA,CAACC,EAAE,EAAER,IAAI,EAAEC,KAAK,KAAK;EACzC;EACA,OAAOJ,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,eAAeU,EAAE,EAAE,EAAER,IAAI,EAAE;IACpDG,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMS,aAAa,GAAGA,CAACF,EAAE,EAAEP,KAAK,KAAK;EACnCU,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAACJ,EAAE,CAAC;EACzD,OAAOX,KAAK,CAACgB,MAAM,CAAC,GAAGf,OAAO,aAAaU,EAAE,EAAE,EAAE;IAC/C;IACAL,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMa,cAAc,GAAGA,CAACN,EAAE,EAAEP,KAAK,KAAK;EACpC,OAAOJ,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,WAAWU,EAAE,EAAE,EAAE;IAC1CL,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;AAED,eAAe;EAAEF,aAAa;EAAEM,WAAW;EAAES,cAAc;EAAEP,aAAa;EAAEG;AAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}