{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\Desktop\\\\C8288-PROYECTO\\\\C8288_ProyectFinal\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setToken\n}) => {\n  _s();\n  //formData será la data que se enviará mediante el método post\n  const [formData, setFormData] = useState({\n    email: '',\n    contrasenia: ''\n  });\n\n  //Esta función se encargará de ir actualizando formData a medida que el usuario ingrese o quite valores en el formulario\n  //Es decir, esta función manejadora de eventos se llamará cuando ocurra una interación del cliente con el formulario\n  const handleChange = e => {\n    //Se va actualizando formData a medida que el usuario interactúe con el formulario\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //Esta función manejadora de eventos se llamará cuando el usuario hace click en el botón\n  //Esta función realizará una solicitud POST al servidor, enviándole la data almacenada en formData\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      //Se llama a la función \"login\" de authService, que es la que se encargará de enviar una solicitud POST con la data almacenada en el form\n      const response = await authService.login(formData);\n      alert('Inicio de sesión exitoso');\n\n      //Como el servidor lo que envía es el token, entonces se accede al token mediante response.data.token y este es guardado en el localStorage\n      localStorage.setItem('token', response.data.token);\n\n      //Se actualiza el token con la prop \"setToken\" pasada por parámetro desde el componente padre, para que la variable 'token' que\n      //lo almacena sea diferente de \"null\" y se muestre el componente dashboard.\n      setToken(response.data.token);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error al iniciar sesión');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"contrasenia\",\n      placeholder: \"Contrase\\xF1a\",\n      value: formData.contrasenia,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Iniciar sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"cYkLLluUUXbmjHJWGhovMEHl42o=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","authService","jsxDEV","_jsxDEV","Login","setToken","_s","formData","setFormData","email","contrasenia","handleChange","e","target","name","value","handleSubmit","preventDefault","response","login","alert","localStorage","setItem","data","token","error","_error$response","_error$response$data","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/diana/Desktop/C8288-PROYECTO/C8288_ProyectFinal/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport authService from '../services/authService';\r\n\r\nconst Login = ({setToken}) => {\r\n    //formData será la data que se enviará mediante el método post\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    contrasenia: '',\r\n  });\r\n\r\n  //Esta función se encargará de ir actualizando formData a medida que el usuario ingrese o quite valores en el formulario\r\n  //Es decir, esta función manejadora de eventos se llamará cuando ocurra una interación del cliente con el formulario\r\n  const handleChange = (e) => {\r\n    //Se va actualizando formData a medida que el usuario interactúe con el formulario\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Esta función manejadora de eventos se llamará cuando el usuario hace click en el botón\r\n  //Esta función realizará una solicitud POST al servidor, enviándole la data almacenada en formData\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n        //Se llama a la función \"login\" de authService, que es la que se encargará de enviar una solicitud POST con la data almacenada en el form\r\n        const response = await authService.login(formData);\r\n        alert('Inicio de sesión exitoso');\r\n\r\n        //Como el servidor lo que envía es el token, entonces se accede al token mediante response.data.token y este es guardado en el localStorage\r\n        localStorage.setItem('token', response.data.token);\r\n\r\n        \r\n        //Se actualiza el token con la prop \"setToken\" pasada por parámetro desde el componente padre, para que la variable 'token' que\r\n        //lo almacena sea diferente de \"null\" y se muestre el componente dashboard.\r\n        setToken(response.data.token);\r\n\r\n\r\n    } catch (error) {\r\n        alert(error.response?.data?.error || 'Error al iniciar sesión');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required/>\r\n      <input type=\"password\" name=\"contrasenia\" placeholder=\"Contraseña\" value={formData.contrasenia} onChange={handleChange} required/>\r\n      <button type=\"submit\">Iniciar sesión</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1B;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE;EACf,CAAC,CAAC;;EAEF;EACA;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACAJ,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA;EACA,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMjB,WAAW,CAACkB,KAAK,CAACZ,QAAQ,CAAC;MAClDa,KAAK,CAAC,0BAA0B,CAAC;;MAEjC;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC;;MAGlD;MACA;MACAnB,QAAQ,CAACa,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC;IAGjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACZP,KAAK,CAAC,EAAAM,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,yBAAyB,CAAC;IACnE;EACF,CAAC;EAED,oBACEtB,OAAA;IAAMyB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC3B1B,OAAA;MAAO2B,IAAI,EAAC,OAAO;MAAChB,IAAI,EAAC,OAAO;MAACiB,WAAW,EAAC,OAAO;MAAChB,KAAK,EAAER,QAAQ,CAACE,KAAM;MAACuB,QAAQ,EAAErB,YAAa;MAACsB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9GlC,OAAA;MAAO2B,IAAI,EAAC,UAAU;MAAChB,IAAI,EAAC,aAAa;MAACiB,WAAW,EAAC,eAAY;MAAChB,KAAK,EAAER,QAAQ,CAACG,WAAY;MAACsB,QAAQ,EAAErB,YAAa;MAACsB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClIlC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEX,CAAC;AAAC/B,EAAA,CA5CIF,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}