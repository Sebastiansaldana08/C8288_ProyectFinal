{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\Desktop\\\\C8288-PROYECTO\\\\C8288_ProyectFinal\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//Se usa el hook useState para el token\nimport { useState } from \"react\";\n\n//Se importan los componentes para la UI\nimport Register from \"./components/Register\";\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const handleLogout = () => {\n    setToken(null);\n    alert('Sesión cerrada');\n  };\n\n  //Se usa el operador ternario para mostrar los componentes de register y login cuando NO se realiza la autenticación con el token\n  //En caso sí se realice la autenticación, se mostrará el componente \"Dashboard\", que hará una solitud GET al servidor para listar todos los recursos\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        setToken: setToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      token: token,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Register","Login","Dashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","handleLogout","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/diana/Desktop/C8288-PROYECTO/C8288_ProyectFinal/frontend/src/App.js"],"sourcesContent":["//Se usa el hook useState para el token\r\nimport {useState} from \"react\";\r\n\r\n//Se importan los componentes para la UI\r\nimport Register from \"./components/Register\";\r\nimport Login from './components/Login';\r\nimport Dashboard from './components/Dashboard';\r\n\r\n\r\nconst App = () => {\r\n  const [token, setToken] = useState(null);\r\n\r\n  const handleLogout = () => {\r\n      setToken(null);\r\n      alert('Sesión cerrada');\r\n  };\r\n\r\n  //Se usa el operador ternario para mostrar los componentes de register y login cuando NO se realiza la autenticación con el token\r\n  //En caso sí se realice la autenticación, se mostrará el componente \"Dashboard\", que hará una solitud GET al servidor para listar todos los recursos\r\n  return (\r\n      <div>\r\n          {!token ? (\r\n            <>\r\n            <Register/>\r\n            <Login setToken={setToken}/>\r\n            </>\r\n          ):(\r\n            <Dashboard token={token} onLogout={handleLogout}/>\r\n          )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA;AACA,SAAQA,QAAQ,QAAO,OAAO;;AAE9B;AACA,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACvBD,QAAQ,CAAC,IAAI,CAAC;IACdE,KAAK,CAAC,gBAAgB,CAAC;EAC3B,CAAC;;EAED;EACA;EACA,oBACIR,OAAA;IAAAS,QAAA,EACK,CAACJ,KAAK,gBACLL,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACAT,OAAA,CAACJ,QAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACXb,OAAA,CAACH,KAAK;QAACS,QAAQ,EAAEA;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eAC1B,CAAC,gBAEHb,OAAA,CAACF,SAAS;MAACO,KAAK,EAAEA,KAAM;MAACS,QAAQ,EAAEP;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAClD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEZ,CAAC;AAACT,EAAA,CAtBID,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}